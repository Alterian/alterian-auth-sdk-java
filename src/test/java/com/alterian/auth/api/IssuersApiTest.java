/*
 * Authentication API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.auth.api;

import com.alterian.auth.ApiException;
import com.alterian.auth.model.AddCertificateDefaultResponse;
import com.alterian.auth.model.AddIssuerRequest;
import com.alterian.auth.model.DeleteIssuerRequest;
import com.alterian.auth.model.GetCertificatesRequest;
import com.alterian.auth.model.GetIssuerDefaultResponse;
import com.alterian.auth.model.GetIssuerRequest;
import com.alterian.auth.model.GetIssuersDefaultResponse;
import com.alterian.auth.model.LogoutDefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssuersApi
 */
@Disabled
public class IssuersApiTest {

    private final IssuersApi api = new IssuersApi();

    /**
     * Adds an Issuer for a Certificate used with single sign on
     *
     * Adds an Issuer for a Certificate used with single sign on
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addIssuerTest() throws ApiException {
        AddIssuerRequest addIssuerRequest = null;
        AddCertificateDefaultResponse response = api.addIssuer(addIssuerRequest);
        // TODO: test validations
    }

    /**
     * Deletes an @see(Issuer) for a Certificate used with single sign on
     *
     * Deletes an @see(Issuer) for a Certificate used with single sign on
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteIssuerTest() throws ApiException {
        DeleteIssuerRequest deleteIssuerRequest = null;
        LogoutDefaultResponse response = api.deleteIssuer(deleteIssuerRequest);
        // TODO: test validations
    }

    /**
     * Retrieves an Issuer for a Certificate used with single sign on
     *
     * Retrieves an Issuer for a Certificate used with single sign on
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIssuerTest() throws ApiException {
        GetIssuerRequest getIssuerRequest = null;
        GetIssuerDefaultResponse response = api.getIssuer(getIssuerRequest);
        // TODO: test validations
    }

    /**
     * Gets a list of available issuers
     *
     * Gets a list of available issuers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIssuersTest() throws ApiException {
        GetCertificatesRequest getCertificatesRequest = null;
        GetIssuersDefaultResponse response = api.getIssuers(getCertificatesRequest);
        // TODO: test validations
    }

    /**
     * Updates information associated with a certificate&#39;s issuer
     *
     * Updates information associated with a certificate&#39;s issuer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateIssuerTest() throws ApiException {
        AddIssuerRequest addIssuerRequest = null;
        LogoutDefaultResponse response = api.updateIssuer(addIssuerRequest);
        // TODO: test validations
    }

}
